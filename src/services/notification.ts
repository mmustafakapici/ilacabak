import * as Notifications from 'expo-notifications';
import { Platform } from 'react-native';

// Bildirim izinlerini ayarla
Notifications.setNotificationHandler({
  handleNotification: async () => ({
    shouldShowAlert: true,
    shouldPlaySound: true,
    shouldSetBadge: true,
  }),
});

export const NotificationService = {
  // Bildirim izinlerini iste
  async requestPermissions() {
    const { status: existingStatus } = await Notifications.getPermissionsAsync();
    let finalStatus = existingStatus;
    
    if (existingStatus !== 'granted') {
      const { status } = await Notifications.requestPermissionsAsync();
      finalStatus = status;
    }
    
    if (finalStatus !== 'granted') {
      return false;
    }
    return true;
  },

  // Demo bildirimi gÃ¶nder
  async sendDemoNotification(minutes: number) {
    try {
      await this.requestPermissions();

      // Bildirim iÃ§eriÄŸi
      const notificationContent = {
        title: "Ä°laÃ§ HatÄ±rlatmasÄ±",
        body: `${minutes} dakika sonra ilaÃ§ saatiniz gelecek!`,
        sound: true,
        priority: Notifications.AndroidNotificationPriority.HIGH,
        data: { type: 'demo', minutes },
      };

      // 10 saniye sonra bildirim gÃ¶nder
      await Notifications.scheduleNotificationAsync({
        content: notificationContent,
        trigger: { seconds: 10 },
      });

      return true;
    } catch (error) {
      console.error('Demo bildirimi gÃ¶nderilirken hata:', error);
      return false;
    }
  },

  // Acil durum bildirimi gÃ¶nder
  async sendEmergencyNotification() {
    try {
      await this.requestPermissions();

      // Bildirim iÃ§eriÄŸi
      const notificationContent = {
        title: "ðŸš¨ ACÄ°L DURUM!",
        body: "KullanÄ±cÄ± acil durum butonuna bastÄ±! LÃ¼tfen hemen kontrol edin.",
        sound: true,
        priority: Notifications.AndroidNotificationPriority.MAX,
        data: { type: 'emergency' },
      };

      // Hemen bildirim gÃ¶nder
      await Notifications.scheduleNotificationAsync({
        content: notificationContent,
        trigger: null,
      });

      return true;
    } catch (error) {
      console.error('Acil durum bildirimi gÃ¶nderilirken hata:', error);
      return false;
    }
  },

  // TÃ¼m bildirimleri temizle
  async cancelAllNotifications() {
    await Notifications.cancelAllScheduledNotificationsAsync();
  }
}; 